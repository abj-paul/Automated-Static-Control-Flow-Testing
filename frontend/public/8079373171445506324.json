{"functions": ["int main() {\n    int x = 10;\n    int y = 5;\n\n    if (x > 5) {\n        y = 10;\n    } else if (x < 5) {\n        y = 20;\n    } else {\n        y = 30;\n    }\n\n    while (x > 0) {\n        x--;\n    }\n\n anotherFunction();\n    return 0;\n}", "void anotherFunction() {\n    int y = 5;\n    for (int i = 0; i < y; i++) {\n        y += i;\n    }\n    uwuFunction();\n}"], "asts": ["{\n    \"_nodetype\": \"FileAST\",\n    \"coord\": null,\n    \"ext\": [\n        {\n            \"_nodetype\": \"FuncDef\",\n            \"body\": {\n                \"_nodetype\": \"Compound\",\n                \"block_items\": [\n                    {\n                        \"_nodetype\": \"Decl\",\n                        \"align\": [],\n                        \"bitsize\": null,\n                        \"coord\": \":2:9\",\n                        \"funcspec\": [],\n                        \"init\": {\n                            \"_nodetype\": \"Constant\",\n                            \"coord\": \":2:13\",\n                            \"type\": \"int\",\n                            \"value\": \"10\"\n                        },\n                        \"name\": \"x\",\n                        \"quals\": [],\n                        \"storage\": [],\n                        \"type\": {\n                            \"_nodetype\": \"TypeDecl\",\n                            \"align\": null,\n                            \"coord\": \":2:9\",\n                            \"declname\": \"x\",\n                            \"quals\": [],\n                            \"type\": {\n                                \"_nodetype\": \"IdentifierType\",\n                                \"coord\": \":2:5\",\n                                \"names\": [\n                                    \"int\"\n                                ]\n                            }\n                        }\n                    },\n                    {\n                        \"_nodetype\": \"Decl\",\n                        \"align\": [],\n                        \"bitsize\": null,\n                        \"coord\": \":3:9\",\n                        \"funcspec\": [],\n                        \"init\": {\n                            \"_nodetype\": \"Constant\",\n                            \"coord\": \":3:13\",\n                            \"type\": \"int\",\n                            \"value\": \"5\"\n                        },\n                        \"name\": \"y\",\n                        \"quals\": [],\n                        \"storage\": [],\n                        \"type\": {\n                            \"_nodetype\": \"TypeDecl\",\n                            \"align\": null,\n                            \"coord\": \":3:9\",\n                            \"declname\": \"y\",\n                            \"quals\": [],\n                            \"type\": {\n                                \"_nodetype\": \"IdentifierType\",\n                                \"coord\": \":3:5\",\n                                \"names\": [\n                                    \"int\"\n                                ]\n                            }\n                        }\n                    },\n                    {\n                        \"_nodetype\": \"If\",\n                        \"cond\": {\n                            \"_nodetype\": \"BinaryOp\",\n                            \"coord\": \":5:9\",\n                            \"left\": {\n                                \"_nodetype\": \"ID\",\n                                \"coord\": \":5:9\",\n                                \"name\": \"x\"\n                            },\n                            \"op\": \">\",\n                            \"right\": {\n                                \"_nodetype\": \"Constant\",\n                                \"coord\": \":5:13\",\n                                \"type\": \"int\",\n                                \"value\": \"5\"\n                            }\n                        },\n                        \"coord\": \":5:5\",\n                        \"iffalse\": {\n                            \"_nodetype\": \"If\",\n                            \"cond\": {\n                                \"_nodetype\": \"BinaryOp\",\n                                \"coord\": \":7:16\",\n                                \"left\": {\n                                    \"_nodetype\": \"ID\",\n                                    \"coord\": \":7:16\",\n                                    \"name\": \"x\"\n                                },\n                                \"op\": \"<\",\n                                \"right\": {\n                                    \"_nodetype\": \"Constant\",\n                                    \"coord\": \":7:20\",\n                                    \"type\": \"int\",\n                                    \"value\": \"5\"\n                                }\n                            },\n                            \"coord\": \":7:12\",\n                            \"iffalse\": {\n                                \"_nodetype\": \"Compound\",\n                                \"block_items\": [\n                                    {\n                                        \"_nodetype\": \"Assignment\",\n                                        \"coord\": \":10:9\",\n                                        \"lvalue\": {\n                                            \"_nodetype\": \"ID\",\n                                            \"coord\": \":10:9\",\n                                            \"name\": \"y\"\n                                        },\n                                        \"op\": \"=\",\n                                        \"rvalue\": {\n                                            \"_nodetype\": \"Constant\",\n                                            \"coord\": \":10:13\",\n                                            \"type\": \"int\",\n                                            \"value\": \"30\"\n                                        }\n                                    }\n                                ],\n                                \"coord\": \":9:1\"\n                            },\n                            \"iftrue\": {\n                                \"_nodetype\": \"Compound\",\n                                \"block_items\": [\n                                    {\n                                        \"_nodetype\": \"Assignment\",\n                                        \"coord\": \":8:9\",\n                                        \"lvalue\": {\n                                            \"_nodetype\": \"ID\",\n                                            \"coord\": \":8:9\",\n                                            \"name\": \"y\"\n                                        },\n                                        \"op\": \"=\",\n                                        \"rvalue\": {\n                                            \"_nodetype\": \"Constant\",\n                                            \"coord\": \":8:13\",\n                                            \"type\": \"int\",\n                                            \"value\": \"20\"\n                                        }\n                                    }\n                                ],\n                                \"coord\": \":7:1\"\n                            }\n                        },\n                        \"iftrue\": {\n                            \"_nodetype\": \"Compound\",\n                            \"block_items\": [\n                                {\n                                    \"_nodetype\": \"Assignment\",\n                                    \"coord\": \":6:9\",\n                                    \"lvalue\": {\n                                        \"_nodetype\": \"ID\",\n                                        \"coord\": \":6:9\",\n                                        \"name\": \"y\"\n                                    },\n                                    \"op\": \"=\",\n                                    \"rvalue\": {\n                                        \"_nodetype\": \"Constant\",\n                                        \"coord\": \":6:13\",\n                                        \"type\": \"int\",\n                                        \"value\": \"10\"\n                                    }\n                                }\n                            ],\n                            \"coord\": \":5:1\"\n                        }\n                    },\n                    {\n                        \"_nodetype\": \"While\",\n                        \"cond\": {\n                            \"_nodetype\": \"BinaryOp\",\n                            \"coord\": \":13:12\",\n                            \"left\": {\n                                \"_nodetype\": \"ID\",\n                                \"coord\": \":13:12\",\n                                \"name\": \"x\"\n                            },\n                            \"op\": \">\",\n                            \"right\": {\n                                \"_nodetype\": \"Constant\",\n                                \"coord\": \":13:16\",\n                                \"type\": \"int\",\n                                \"value\": \"0\"\n                            }\n                        },\n                        \"coord\": \":13:5\",\n                        \"stmt\": {\n                            \"_nodetype\": \"Compound\",\n                            \"block_items\": [\n                                {\n                                    \"_nodetype\": \"UnaryOp\",\n                                    \"coord\": \":14:9\",\n                                    \"expr\": {\n                                        \"_nodetype\": \"ID\",\n                                        \"coord\": \":14:9\",\n                                        \"name\": \"x\"\n                                    },\n                                    \"op\": \"p--\"\n                                }\n                            ],\n                            \"coord\": \":13:1\"\n                        }\n                    },\n                    {\n                        \"_nodetype\": \"FuncCall\",\n                        \"args\": null,\n                        \"coord\": \":17:2\",\n                        \"name\": {\n                            \"_nodetype\": \"ID\",\n                            \"coord\": \":17:2\",\n                            \"name\": \"anotherFunction\"\n                        }\n                    },\n                    {\n                        \"_nodetype\": \"Return\",\n                        \"coord\": \":18:5\",\n                        \"expr\": {\n                            \"_nodetype\": \"Constant\",\n                            \"coord\": \":18:12\",\n                            \"type\": \"int\",\n                            \"value\": \"0\"\n                        }\n                    }\n                ],\n                \"coord\": \":1:1\"\n            },\n            \"coord\": \":1:5\",\n            \"decl\": {\n                \"_nodetype\": \"Decl\",\n                \"align\": [],\n                \"bitsize\": null,\n                \"coord\": \":1:5\",\n                \"funcspec\": [],\n                \"init\": null,\n                \"name\": \"main\",\n                \"quals\": [],\n                \"storage\": [],\n                \"type\": {\n                    \"_nodetype\": \"FuncDecl\",\n                    \"args\": null,\n                    \"coord\": \":1:5\",\n                    \"type\": {\n                        \"_nodetype\": \"TypeDecl\",\n                        \"align\": null,\n                        \"coord\": \":1:5\",\n                        \"declname\": \"main\",\n                        \"quals\": [],\n                        \"type\": {\n                            \"_nodetype\": \"IdentifierType\",\n                            \"coord\": \":1:1\",\n                            \"names\": [\n                                \"int\"\n                            ]\n                        }\n                    }\n                }\n            },\n            \"param_decls\": null\n        }\n    ]\n}", "{\n    \"_nodetype\": \"FileAST\",\n    \"coord\": null,\n    \"ext\": [\n        {\n            \"_nodetype\": \"FuncDef\",\n            \"body\": {\n                \"_nodetype\": \"Compound\",\n                \"block_items\": [\n                    {\n                        \"_nodetype\": \"Decl\",\n                        \"align\": [],\n                        \"bitsize\": null,\n                        \"coord\": \":2:9\",\n                        \"funcspec\": [],\n                        \"init\": {\n                            \"_nodetype\": \"Constant\",\n                            \"coord\": \":2:13\",\n                            \"type\": \"int\",\n                            \"value\": \"5\"\n                        },\n                        \"name\": \"y\",\n                        \"quals\": [],\n                        \"storage\": [],\n                        \"type\": {\n                            \"_nodetype\": \"TypeDecl\",\n                            \"align\": null,\n                            \"coord\": \":2:9\",\n                            \"declname\": \"y\",\n                            \"quals\": [],\n                            \"type\": {\n                                \"_nodetype\": \"IdentifierType\",\n                                \"coord\": \":2:5\",\n                                \"names\": [\n                                    \"int\"\n                                ]\n                            }\n                        }\n                    },\n                    {\n                        \"_nodetype\": \"For\",\n                        \"cond\": {\n                            \"_nodetype\": \"BinaryOp\",\n                            \"coord\": \":3:21\",\n                            \"left\": {\n                                \"_nodetype\": \"ID\",\n                                \"coord\": \":3:21\",\n                                \"name\": \"i\"\n                            },\n                            \"op\": \"<\",\n                            \"right\": {\n                                \"_nodetype\": \"ID\",\n                                \"coord\": \":3:25\",\n                                \"name\": \"y\"\n                            }\n                        },\n                        \"coord\": \":3:5\",\n                        \"init\": {\n                            \"_nodetype\": \"DeclList\",\n                            \"coord\": \":3:5\",\n                            \"decls\": [\n                                {\n                                    \"_nodetype\": \"Decl\",\n                                    \"align\": [],\n                                    \"bitsize\": null,\n                                    \"coord\": \":3:14\",\n                                    \"funcspec\": [],\n                                    \"init\": {\n                                        \"_nodetype\": \"Constant\",\n                                        \"coord\": \":3:18\",\n                                        \"type\": \"int\",\n                                        \"value\": \"0\"\n                                    },\n                                    \"name\": \"i\",\n                                    \"quals\": [],\n                                    \"storage\": [],\n                                    \"type\": {\n                                        \"_nodetype\": \"TypeDecl\",\n                                        \"align\": null,\n                                        \"coord\": \":3:14\",\n                                        \"declname\": \"i\",\n                                        \"quals\": [],\n                                        \"type\": {\n                                            \"_nodetype\": \"IdentifierType\",\n                                            \"coord\": \":3:10\",\n                                            \"names\": [\n                                                \"int\"\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"next\": {\n                            \"_nodetype\": \"UnaryOp\",\n                            \"coord\": \":3:28\",\n                            \"expr\": {\n                                \"_nodetype\": \"ID\",\n                                \"coord\": \":3:28\",\n                                \"name\": \"i\"\n                            },\n                            \"op\": \"p++\"\n                        },\n                        \"stmt\": {\n                            \"_nodetype\": \"Compound\",\n                            \"block_items\": [\n                                {\n                                    \"_nodetype\": \"Assignment\",\n                                    \"coord\": \":4:9\",\n                                    \"lvalue\": {\n                                        \"_nodetype\": \"ID\",\n                                        \"coord\": \":4:9\",\n                                        \"name\": \"y\"\n                                    },\n                                    \"op\": \"+=\",\n                                    \"rvalue\": {\n                                        \"_nodetype\": \"ID\",\n                                        \"coord\": \":4:14\",\n                                        \"name\": \"i\"\n                                    }\n                                }\n                            ],\n                            \"coord\": \":3:1\"\n                        }\n                    },\n                    {\n                        \"_nodetype\": \"FuncCall\",\n                        \"args\": null,\n                        \"coord\": \":6:5\",\n                        \"name\": {\n                            \"_nodetype\": \"ID\",\n                            \"coord\": \":6:5\",\n                            \"name\": \"uwuFunction\"\n                        }\n                    }\n                ],\n                \"coord\": \":1:1\"\n            },\n            \"coord\": \":1:6\",\n            \"decl\": {\n                \"_nodetype\": \"Decl\",\n                \"align\": [],\n                \"bitsize\": null,\n                \"coord\": \":1:6\",\n                \"funcspec\": [],\n                \"init\": null,\n                \"name\": \"anotherFunction\",\n                \"quals\": [],\n                \"storage\": [],\n                \"type\": {\n                    \"_nodetype\": \"FuncDecl\",\n                    \"args\": null,\n                    \"coord\": \":1:6\",\n                    \"type\": {\n                        \"_nodetype\": \"TypeDecl\",\n                        \"align\": null,\n                        \"coord\": \":1:6\",\n                        \"declname\": \"anotherFunction\",\n                        \"quals\": [],\n                        \"type\": {\n                            \"_nodetype\": \"IdentifierType\",\n                            \"coord\": \":1:1\",\n                            \"names\": [\n                                \"void\"\n                            ]\n                        }\n                    }\n                }\n            },\n            \"param_decls\": null\n        }\n    ]\n}"], "metrics": {"NumberOfFunctions": 2, "NumberOfVariables": 0, "NumberOfStatements": 0, "FunctionMetrics": [{"FunctionName": "main", "CyclomaticComplexity": 1, "NumberOfStatements": 6, "NumberOfVariables": 3}, {"FunctionName": "anotherFunction", "CyclomaticComplexity": 3, "NumberOfStatements": 3, "NumberOfVariables": 3}]}, "variables": [