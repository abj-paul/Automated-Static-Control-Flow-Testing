{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\cpp\\\\Automated-Static-Control-Flow-Testing\\\\frontend\\\\src\\\\components\\\\InputFile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileInputComponent = () => {\n  _s();\n  const [filePath, setFilePath] = useState('');\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && file.name.endsWith('.c')) {\n      setFilePath(file.name); // Display only the file name\n    } else {\n      alert('Please select a valid .c file');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"fileInput\",\n      children: \"Select a .c file:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileInput\",\n      accept: \".c\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected File Name: \", filePath]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(FileInputComponent, \"tDyGvMb3jwoiRUFyLp7N6T9zmbw=\");\n_c = FileInputComponent;\nexport default FileInputComponent;\nvar _c;\n$RefreshReg$(_c, \"FileInputComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileInputComponent","_s","filePath","setFilePath","handleFileChange","e","file","target","files","name","endsWith","alert","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/cpp/Automated-Static-Control-Flow-Testing/frontend/src/components/InputFile.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst FileInputComponent = () => {\r\n  const [filePath, setFilePath] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    if (file && file.name.endsWith('.c')) {\r\n      setFilePath(file.name); // Display only the file name\r\n    } else {\r\n      alert('Please select a valid .c file');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"fileInput\">Select a .c file:</label>\r\n      <input\r\n        type=\"file\"\r\n        id=\"fileInput\"\r\n        accept=\".c\"\r\n        onChange={handleFileChange}\r\n      />\r\n      <p>Selected File Name: {filePath}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileInputComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMO,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAE9B,IAAIF,IAAI,IAAIA,IAAI,CAACG,IAAI,CAACC,QAAQ,CAAC,IAAI,CAAC,EAAE;MACpCP,WAAW,CAACG,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC;IAC1B,CAAC,MAAM;MACLE,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAOc,OAAO,EAAC,WAAW;MAAAD,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpDlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,WAAW;MACdC,MAAM,EAAC,IAAI;MACXC,QAAQ,EAAEjB;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFlB,OAAA;MAAAa,QAAA,GAAG,sBAAoB,EAACV,QAAQ;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAzBID,kBAAkB;AAAAsB,EAAA,GAAlBtB,kBAAkB;AA2BxB,eAAeA,kBAAkB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}